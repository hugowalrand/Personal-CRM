// The contact object shape stored in the database and used in the app
export type Contact = {
    id: string; // Will be a UUID generated by Supabase
    created_at: string; // Automatically added by Supabase
    name: string;
    summary: string;
    key_points: string[] | null;
    priority: number | null; // ex: 1 for P1, 2 for P2
    action_tag: string | null;
    notes: string | null;
    contact_info: {
        email?: string;
        linkedin?: string;
        website?: string;
    } | null;
};

// Type for inserting a new contact, derived from the main type.
// Explicitly defined to avoid complex nested utility types that may cause TS errors.
export type ContactInsert = {
    name: string;
    summary: string;
    key_points: string[] | null;
    priority: number | null;
    action_tag: string | null;
    notes: string | null;
    contact_info: {
        email?: string;
        linkedin?: string;
        website?: string;
    } | null;
};

// Type for updating an existing contact. All fields are optional.
export type ContactUpdate = {
    name?: string;
    summary?: string;
    key_points?: string[] | null;
    priority?: number | null;
    action_tag?: string | null;
    notes?: string | null;
    contact_info?: {
        email?: string;
        linkedin?: string;
        website?: string;
    } | null;
};

// For ChatInterface component
export type ChatMessage = {
    id: string | number;
    role: 'user' | 'assistant';
    text: string;
};

// For HistoryLogModal component
export type ContactHistory = {
    id: string;
    created_at: string;
    contact_id: string;
    changed_by: string;
    reason: string;
    changed_fields: Record<string, unknown> | null;
};

// Type for inserting a new history log.
export type ContactHistoryInsert = {
    contact_id: string;
    changed_by: string;
    reason: string;
    changed_fields: Record<string, unknown> | null;
};

// Type for updating a history log.
export type ContactHistoryUpdate = {
    contact_id?: string;
    changed_by?: string;
    reason?: string;
    changed_fields?: Record<string, unknown> | null;
};